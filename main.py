# coding=utf-8
import telebot

from telebot import types
from check import Bucket


TOKEN = '5638575257:AAGYpIylImQliUOa1qoIXBYTmvNvwa07Dpc'

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands = ['start'])
def first(message):
    key = types.ReplyKeyboardMarkup(True, False)
    key.row('‚Ñπ –û –Ω–∞—Å', 'üìñ –ú–µ–Ω—é')
    key.row('üöó –î–æ—Å—Ç–∞–≤–∫–∞')
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µ', reply_markup=key)


@bot.message_handler(content_types =['text', 'contact'])
def start(message):
    if message.text == '‚Ñπ –û –Ω–∞—Å':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, 'üçï–ë–µ–ª–ª–∞ –í–∏—Ç–∞ –ü–∏—Ü—Ü–∞ - —ç—Ç–æ –Ω–æ–≤–∞—è –ø–∏—Ü—Ü–µ—Ä–∏—è –≤ –°–æ—á–∏!\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —É—é—Ç–Ω—É—é –ø–∏—Ü—Ü–µ—Ä–∏—é –≤ —Å–∞–º–æ–º —Å–µ—Ä–¥—Ü–µ –°–æ—á–∏! –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–∞–º—ã–µ –≤–∫—É—Å–Ω—ã–µ, –∞—Ä–æ–º–∞—Ç–Ω—ã–µ –∏ —Å–æ—á–Ω—ã–µ –ø–∏—Ü—Ü—ã, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º —Ä–µ—Ü–µ–ø—Ç–∞–º –∏ –≤–∫—É—Å–æ–≤—ã–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–º –Ω–∞—à–∏—Ö –ø–æ–≤–∞—Ä–æ–≤.\n\n–ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞—à–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –∏ –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –æ—Ç –ª—É—á—à–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤. –ù–∞—à–∞ –ø–∏—Ü—Ü–∞ –∏–º–µ–µ—Ç —Ç–æ–Ω–∫–æ–µ –∏ —Ö—Ä—É—Å—Ç—è—â–µ–µ —Ç–µ—Å—Ç–æ, –∞ –Ω–∞—à–∏ —Å–æ—É—Å—ã —è–≤–ª—è—é—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ —à–µ–¥–µ–≤—Ä–∞–º–∏.\n\n–í –Ω–∞—à–µ–π –ø–∏—Ü—Ü–µ—Ä–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –æ–±–µ–¥–æ–º –∏–ª–∏ —É–∂–∏–Ω–æ–º –≤ —É—é—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ, –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π –∏ —Å–µ–º—å–∏. –ú—ã —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–ª—É–≥—É –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–∏—Ü—Ü—ã –Ω–∞ –¥–æ–º, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –Ω–∞—à–∏–º–∏ –±–ª—é–¥–∞–º–∏ –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è –∏ –º–µ—Å—Ç–µ.\n\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –∫ –Ω–∞–º –≤ –ø–∏—Ü—Ü–µ—Ä–∏—é, –∏ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—ã –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å –¥–æ–≤–æ–ª—å–Ω—ã –Ω–∞—à–∏–º–∏ –ø–∏—Ü—Ü–∞–º–∏ –∏ –Ω–∞—à–∏–º –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–æ–º!\n\n–í –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è —Å–∫–∏–¥–∫–∞ 20%\n\nüè°  —É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, 6, Sun City –°–æ—á–∏, 3 —ç—Ç–∞–∂\n‚òéÔ∏è  8 (495) xxx-xx-xx\nüïò  12:00 - 00:00')
        send = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µ', reply_markup=keyboard)
        bot.register_next_step_handler(send, start)
    elif message.text == 'üìñ –ú–µ–Ω—é':
        keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
        bot.send_message(message.chat.id, '1. –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞: —Å–æ—É—Å —Ç–æ–º–∞—Ç–Ω—ã–π, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫\n2. –ú–æ—Ä—Å–∫–∞—è: —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –º–∏–¥–∏–∏, –∫–∞–ª—å–º–∞—Ä—ã, –∫—Ä–µ–≤–µ—Ç–∫–∏, –ª—É–∫, –ø–µ—Ä–µ—Ü —á–∏–ª–∏\n3. –ü–µ–ø–ø–µ—Ä–æ–Ω–∏: —Å–æ—É—Å —Ç–æ–º–∞—Ç–Ω—ã–π, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏')
        keyboard.row('üöó –î–æ—Å—Ç–∞–≤–∫–∞')
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µ', reply_markup=keyboard)
    elif message.text == 'üöó –î–æ—Å—Ç–∞–≤–∫–∞':
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        send = bot.send_message(message.chat.id, '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç ?', reply_markup=keyboard)
        bucket = Bucket(message.from_user.id)
        bot.register_next_step_handler(send, a1, bucket)
    elif message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)

def a1(message, bucket):
    bucket.set_name(message.text)

    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)
    else:
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        send = bot.send_message(message.chat.id, '–ö–∞–∫—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–∏—Ü—Ü—É ? –ë–æ–ª—å—à—É—é —Å—Ä–µ–¥–Ω—é—é –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫—É—é ?'.format(name=message.text), reply_markup=keyboard)
        bot.register_next_step_handler(send, a2, bucket)

def a2(message, bucket):
    bucket.set_zakaz(message.text)
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)
    else:
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        send = bot.send_message(message.chat.id, '–ö–∞–∫ –±—É–¥–µ—Ç–µ –ø–ª–∞—Ç–∏—Ç—å ?', reply_markup=keyboard)
        bot.register_next_step_handler(send, a3, bucket)

def a3(message, bucket):
    bucket.set_payment_method(message.text)
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)
    elif message.text:
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        send = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ ?', reply_markup=keyboard)
        bot.register_next_step_handler(send, a4, bucket)

#–ü–æ–≤—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
def a4(message, bucket):
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)
    elif message.text:
        bucket.set_address(message.text)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        zakaz_str = ""
        number = 1
        for i in bucket.zakaz:
            zakaz_str = zakaz_str + str(str(number) + ": " + i + ' ' + bucket.zakaz.get(i)[1] + " - " + str(bucket.zakaz.get(i)[0]) + "—à—Ç.\n")
            number +=1

        send = bot.send_message(message.chat.id, f'–í—ã —Ö–æ—Ç–∏—Ç–µ: \n{zakaz_str}–æ–ø–ª–∞—Ç–∞ - {bucket.payment_method},\n–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É {bucket.address} ?\n', reply_markup=keyboard)
        bot.register_next_step_handler(send, a5, bucket)

def a5(message, bucket):
    if message.text == '‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        first(message)
    elif message.text:
#        keyboard = types.ReplyKeyboardMarkup(True, False)
#        keyboard.row('‚ìÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        send = bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑")       
        bot.register_next_step_handler(send, first)


def main():
    bot.polling()


if __name__ == "__main__":
    main()